#+TITLE: OProfile

* 描述
  oprofile利用cpu硬件层面提供的性能计数器(performance counter)，通过计
  数采样，帮助我们从进程、函数、代码层面找出占用cpu的"罪魁祸首"。
  运行oprofile需要root权限，因为它要加载profile模块，启动oprofiled后台程序等
* 常用命令
  opcontrol --init  加载模块，mout /dev/oprofile 创建必需的文件和目录
  opcontrol --no-vmlinux 或者 opcontrol --vmlinux=/boot/vmlinux-`uname -r` 决定是否对kernel进行profiling
  opcontrol --reset 清楚当前会话中的数据
  opcontrol --start 开始profiling
  ./hello 运行应用程序，oprofile会对它进行profiling
  opcontrol --dump 把收集到的数据写入文件
  opcontrol --stop 停止profiling
  opcotrol -h 关闭守护进程oprofiled
  opcontrol --shutdown 停止oprofiled
  opcontrol --deinit 卸载模块
  op_help：  列出所有支持的事件。
  opcontrol：设置需要收集的事件。
  opreport： 对结果进行统计输出。
  opannaotate：产生带注释的源/汇编文件，源语言级的注释需要编译源文件时的支持。
  opstack：    产生调用图profile，但要求x86/2.6的平台，并且linux2.6安装了call-graph patch
  opgprof：    产生如gprof相似的结果。
  oparchive：  将所有的原始数据文件收集打包，可以到另一台机器上进行分析。
  op_import：  将采样的数据库文件从另一种abi转化成本地格式。
  使用oprofile进行cpu使用情况检测，需要经过初始化、启动检测、导出检测数据、查看检测结果等步骤，以下为常用的oprofile命令。
** 初始化
   opcontrol --no-vmlinux : 指示oprofile启动检测后，不记录内核模块、内核代码相关统计数据
   opcontrol --init : 加载oprofile模块、oprofile驱动程序
** 检测控制
   opcontrol --start : 指示oprofile启动检测
   opcontrol --dump : 指示将oprofile检测到的数据写入文件
   opcontrol --reset : 清空之前检测的数据记录
   opcontrol -h : 关闭oprofile进程
** 查看检测结果
   opreport : 以镜像(image)的角度显示检测结果，进程、动态库、内核模块属于镜像范畴
   opreport -l : 以函数的角度显示检测结果
   opreport -l test : 以函数的角度，针对test进程显示检测结果
   opannotate -s test : 以代码的角度，针对test进程显示检测结果
   opannotate -s /lib64/libc-2.4.so : 以代码的角度，针对libc-2.4.so库显示检测结果
** 使用opannotate从代码层看cpu占用情况
#+NAME: op_test
#+BEGIN_SRC C
//op_test.c
extern void endless();
int main()
{
　　int i = 0, j = 0;
　　for (; i < 10000000; i++ )
     {
           j++;
     }
　　endless();
　　return 0;
}
//end.c
void endless()
{
　　int i = 0;
　　while(1)
     {
         i++;
     }
}
//Makefile
gcc -c -g -fPIC end.c
gcc -shared -fPIC -o libend.so end.o
gcc -g -lend -o op_test op_test.c
#+END_SRC

#+NAME: script
#+BEGIN_SRC sh
linux # opcontrol --reset
linux # opcontrol --start
linux # ./op_test &
sleep 2
opcontrol --dump
opannotate -s ./op_test
opannotate -s /usr/lib64/libend.so
#+END_SRC

* res
  [[http://oprofile.sourceforge.net/doc/index.html][OProfile manual]]
  [[http://www.cnblogs.com/bangerlee/archive/2012/08/30/2659435.html][oprofile使用札记]]
  http://blog.csdn.net/eroswang/article/details/1774486
